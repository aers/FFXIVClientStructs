
NOTE:
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/LayoutEngine/ILayoutInstance.cs
    ☐ [FieldOffset(0x0C)] public int Type; // note: this is a padding field that in some contexts is used to store collider type @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/LayoutEngine/ILayoutInstance.cs#159
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/LayoutEngine/LayoutManager.cs
    ☐ [FieldOffset(0x268)] public StdMap<AnalyticShapeDataKey, AnalyticShapeData> CrcToAnalyticShapeData; // note: value is aligned to 16 bytes, so key has tons of padding @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/LayoutEngine/LayoutManager.cs#56
    ☐ // note: this is a bad bad hack... @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/LayoutEngine/LayoutManager.cs#80
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/AddonMacro.cs
    ☐ /// Note: Value is only set when changing page. @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/AddonMacro.cs#32
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentMJICraftSchedule.cs
    ☐ /// Note that game often reactivates same cycle to refresh data, e.g. after scheduling new craft. @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentMJICraftSchedule.cs#188
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentRetainerItemTransfer.cs
    ☐ /// Note: Not always set, unsure why... @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentRetainerItemTransfer.cs#31
    ☐ /// Note: Not always set, unsure why... @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentRetainerItemTransfer.cs#37
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Component/BGCollision/BGCollisionModule.cs
    ☐ /// Note that individual collider raycast operations are inconsistent in how they handle zero layer mask in raycast request: @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Component/BGCollision/BGCollisionModule.cs#11
    ☐ /// Note that some colliders provide functions to perform raycast without layer check. @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Component/BGCollision/BGCollisionModule.cs#14
    ☐ [FieldOffset(0x50)] public Collider* Object; // note: it's actually always a Collider* @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Component/BGCollision/BGCollisionModule.cs#103
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Component/BGCollision/Collider.cs
    ☐ [FieldOffset(0x04)] public AABB Bounds; // note: y bounds are ignored when reading the file @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Component/BGCollision/Collider.cs#150
    ☐ // note: it has a bunch of extra no-op virtual funcs - I suspect these are various raycast flavours that were at some point removed from base class, but had empty overrides left in derived classes @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Component/BGCollision/Collider.cs#164
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Component/GUI/AtkComponentHoldButton.cs
    ☐ // note: Name made up @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Component/GUI/AtkComponentHoldButton.cs#4
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/Havok/Common/Base/Reflection/Registry/hkClassNameRegistry.cs
    ☐ // NOTE: this is actually a hkStaticClassNameRegistry : hkClassNameRegistry, which the game uses @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/Havok/Common/Base/Reflection/Registry/hkClassNameRegistry.cs#5
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/Havok/Common/Serialize/Util/hkSerializeUtil.cs
    ☐ // 		/// NOTE: Some objects are inherently not serializable because they point to @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/Havok/Common/Serialize/Util/hkSerializeUtil.cs#169
    ☐ // 		/// NOTE: Some objects are inherently not serializable because they point to @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/Havok/Common/Serialize/Util/hkSerializeUtil.cs#179
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/STD/Helper/MutateHelper.cs
    ☐ // Note we've already partitioned around the pivot and do not have to move the pivot again. @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/STD/Helper/MutateHelper.cs#91

TODO:
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentSatisfactionSupply.cs
    ☐ [FieldOffset(0x19)] public byte IsQuestSomething; // TODO: doesn't seem right, 0x18 is used as a dword... @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentSatisfactionSupply.cs#65
    ☐ // TODO: this is likely part of SatisfactionSupplyManager, since it's filled by one of its member functions (assuming agent knows about manager and not vice versa) @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Client/UI/Agent/AgentSatisfactionSupply.cs#68
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Lua/lstate.cs
    ☐ // TODO: move functions out of lua_State and make them static. own luaapi struct maybe? @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Common/Lua/lstate.cs#34
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Component/SteamApi/SteamTypes.cs
    ☐ // TODO: Actually call `SteamInternal_ContextInit(ctx)` here, rather than just returning the cached pointer. @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Component/SteamApi/SteamTypes.cs#48
  @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Component/Text/TextParameter.cs
    ☐ // TODO: implement as Client::System::Data::Variant<> and Client::System::Data::VariantPtr<> @file:///d%3A/source/repos/FFXIVClientStructs/FFXIVClientStructs/FFXIV/Component/Text/TextParameter.cs#3
