using InteropGenerator.Tests.Helpers;
using Xunit;
using VerifyIG = InteropGenerator.Tests.Helpers.IncrementalGeneratorVerifier<InteropGenerator.Generator.InteropGenerator>;

namespace InteropGenerator.Tests.Generator;

public class InheritsAttributeTests {
    [Fact]
    public async Task BasicFieldInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int Field0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public int Field4;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task BasicFieldInheritanceObsolete() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [Obsolete("This field is obsolete")]
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int Field0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public int Field4;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.ObsoleteAttribute("This field is obsolete", false)]
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task BasicFieldInheritanceOffset() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=20)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(16)] public int Field0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=28)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(20)] public int Field4;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(16)] public int Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task BasicFieldInheritanceExplicitParentOffset() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int Field0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=24)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>(parentOffset: 16)]
                            public partial struct ChildStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(20)] public int Field20;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(16)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(16)] public int Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task ChainedFieldInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int BaseStruct_Field0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop(true)]
                            [Inherits<BaseStruct>]
                            public partial struct MiddleStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public int MiddleStruct_Field4;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<MiddleStruct>]
                            public partial struct ChildStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(8)] public int Field8;
                            }
                            """;

        const string middleStructInheritanceCode = """
                                                   // <auto-generated/>
                                                   unsafe partial struct MiddleStruct
                                                   {
                                                       /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                       /// <inheritdoc cref="BaseStruct.BaseStruct_Field0" />
                                                       /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int BaseStruct_Field0;
                                                   }
                                                   """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <inheritdoc cref="BaseStruct.BaseStruct_Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int BaseStruct_Field0;
                                                      /// <summary>Inherited parent class accessor for <see cref="MiddleStruct">MiddleStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public MiddleStruct MiddleStruct;
                                                      /// <inheritdoc cref="MiddleStruct.MiddleStruct_Field4" />
                                                      /// <remarks>Field inherited from parent class <see cref="MiddleStruct">MiddleStruct</see>.</remarks>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public int MiddleStruct_Field4;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("MiddleStruct.Inheritance.InteropGenerator.g.cs", middleStructInheritanceCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task FieldMultipleInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int BaseStruct_Field0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct2
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int BaseStruct2_Field0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            [Inherits<BaseStruct2>]
                            public partial struct ChildStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(8)] public int Field8;
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.BaseStruct_Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int BaseStruct_Field0;
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct2">BaseStruct2</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public BaseStruct2 BaseStruct2;
                                                      /// <inheritdoc cref="BaseStruct2.BaseStruct2_Field0" />
                                                      /// <remarks>Field inherited from parent class <see cref="BaseStruct2">BaseStruct2</see>.</remarks>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public int BaseStruct2_Field0;
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task MemberFunctionInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [MemberFunction("AA BB CC DD ?? ?? ?? ?? AA BB ?? DD")]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public const int StructSize = 4;
                                                   public static class Addresses
                                                   {
                                                       public static readonly global::InteropGenerator.Runtime.Address TestFunction = new global::InteropGenerator.Runtime.Address("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD ?? ?? ?? ??", new ushort[] {}, new ulong[] {0x00000000DDCCBBAA, 0x00000000DD00BBAA}, new ulong[] {0x00000000FFFFFFFF, 0x00000000FF00FFFF}, 0);
                                                   }
                                                   public static partial class Delegates
                                                   {
                                                       public delegate int TestFunction(BaseStruct* thisPtr, int argOne, void* argTwo);
                                                   }
                                                   public unsafe static class MemberFunctionPointers
                                                   {
                                                       public static delegate* unmanaged <BaseStruct*, int, void*, int> TestFunction => (delegate* unmanaged <BaseStruct*, int, void*, int>) BaseStruct.Addresses.TestFunction.Value;
                                                   }
                                                   public partial int TestFunction(int argOne, void* argTwo)
                                                   {
                                                       if (MemberFunctionPointers.TestFunction is null)
                                                       {
                                                           InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD");
                                                       }
                                                       return MemberFunctionPointers.TestFunction((BaseStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                                   }
                                               }
                                               """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction(int, void*)" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction(int argOne, void* argTwo) => BaseStruct.TestFunction(argOne, argTwo);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode),
            SourceGeneration.GetInitializerSource(string.Empty, "BaseStruct", ["TestFunction"]));
    }

    [Fact]
    public async Task MemberFunctionInheritanceObsolete() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [Obsolete("Function is obsolete", true)]
                                [MemberFunction("AA BB CC DD ?? ?? ?? ?? AA BB ?? DD")]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public const int StructSize = 4;
                                                   public static class Addresses
                                                   {
                                                       public static readonly global::InteropGenerator.Runtime.Address TestFunction = new global::InteropGenerator.Runtime.Address("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD ?? ?? ?? ??", new ushort[] {}, new ulong[] {0x00000000DDCCBBAA, 0x00000000DD00BBAA}, new ulong[] {0x00000000FFFFFFFF, 0x00000000FF00FFFF}, 0);
                                                   }
                                                   public static partial class Delegates
                                                   {
                                                       public delegate int TestFunction(BaseStruct* thisPtr, int argOne, void* argTwo);
                                                   }
                                                   public unsafe static class MemberFunctionPointers
                                                   {
                                                       public static delegate* unmanaged <BaseStruct*, int, void*, int> TestFunction => (delegate* unmanaged <BaseStruct*, int, void*, int>) BaseStruct.Addresses.TestFunction.Value;
                                                   }
                                                   public partial int TestFunction(int argOne, void* argTwo)
                                                   {
                                                       if (MemberFunctionPointers.TestFunction is null)
                                                       {
                                                           InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD");
                                                       }
                                                       return MemberFunctionPointers.TestFunction((BaseStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                                   }
                                               }
                                               """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction(int, void*)" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      [global::System.ObsoleteAttribute("Function is obsolete", true)]
                                                      public int TestFunction(int argOne, void* argTwo) => BaseStruct.TestFunction(argOne, argTwo);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode),
            SourceGeneration.GetInitializerSource(string.Empty, "BaseStruct", ["TestFunction"]));
    }

    [Fact]
    public async Task MemberFunctionChainedInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [MemberFunction("AA BB CC DD ?? ?? ?? ?? AA BB ?? DD")]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop(true)]
                            [Inherits<BaseStruct>]
                            public partial struct MiddleStruct
                            {
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<MiddleStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public const int StructSize = 4;
                                                   public static class Addresses
                                                   {
                                                       public static readonly global::InteropGenerator.Runtime.Address TestFunction = new global::InteropGenerator.Runtime.Address("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD ?? ?? ?? ??", new ushort[] {}, new ulong[] {0x00000000DDCCBBAA, 0x00000000DD00BBAA}, new ulong[] {0x00000000FFFFFFFF, 0x00000000FF00FFFF}, 0);
                                                   }
                                                   public static partial class Delegates
                                                   {
                                                       public delegate int TestFunction(BaseStruct* thisPtr, int argOne, void* argTwo);
                                                   }
                                                   public unsafe static class MemberFunctionPointers
                                                   {
                                                       public static delegate* unmanaged <BaseStruct*, int, void*, int> TestFunction => (delegate* unmanaged <BaseStruct*, int, void*, int>) BaseStruct.Addresses.TestFunction.Value;
                                                   }
                                                   public partial int TestFunction(int argOne, void* argTwo)
                                                   {
                                                       if (MemberFunctionPointers.TestFunction is null)
                                                       {
                                                           InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseStruct.TestFunction", "AA BB CC DD ?? ?? ?? ?? AA BB ?? DD");
                                                       }
                                                       return MemberFunctionPointers.TestFunction((BaseStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                                   }
                                               }
                                               """;

        const string middleStructInheritanceCode = """
                                                   // <auto-generated/>
                                                   unsafe partial struct MiddleStruct
                                                   {
                                                       /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                       /// <inheritdoc cref="BaseStruct.TestFunction(int, void*)" />
                                                       /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                       [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                       public int TestFunction(int argOne, void* argTwo) => BaseStruct.TestFunction(argOne, argTwo);
                                                   }
                                                   """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="MiddleStruct">MiddleStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public MiddleStruct MiddleStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction(int, void*)" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction(int argOne, void* argTwo) => MiddleStruct.BaseStruct.TestFunction(argOne, argTwo);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            ("MiddleStruct.Inheritance.InteropGenerator.g.cs", middleStructInheritanceCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode),
            SourceGeneration.GetInitializerSource(string.Empty, "BaseStruct", ["TestFunction"]));
    }

    [Fact]
    public async Task VirtualFunctionInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [VirtualFunction(5)]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public unsafe partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public const int StructSize = 4;
                                                   [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                                   public unsafe partial struct BaseStructVirtualTable
                                                   {
                                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(40)] public delegate* unmanaged <BaseStruct*, int, void*, int> TestFunction;
                                                   }
                                                   [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStructVirtualTable* VirtualTable;
                                                   public static partial class Delegates
                                                   {
                                                       public delegate int TestFunction(BaseStruct* thisPtr, int argOne, void* argTwo);
                                                   }
                                                   [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                   public partial int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((BaseStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                               }
                                               """;

        const string childStructInheritanceGeneratedCode = """
                                                           // <auto-generated/>
                                                           unsafe partial struct ChildStruct
                                                           {
                                                               /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                               [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                               [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                                               public unsafe partial struct ChildStructVirtualTable
                                                               {
                                                                   [global::System.Runtime.InteropServices.FieldOffsetAttribute(40)] public delegate* unmanaged <ChildStruct*, int, void*, int> TestFunction;
                                                               }
                                                               [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public ChildStructVirtualTable* VirtualTable;
                                                               public static partial class Delegates
                                                               {
                                                                   public delegate int TestFunction(ChildStruct* thisPtr, int argOne, void* argTwo);
                                                               }
                                                               /// <inheritdoc cref="BaseStruct.TestFunction(int, void*)" />
                                                               /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                               [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                               public int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((ChildStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                                           }
                                                           """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceGeneratedCode));
    }


    [Fact]
    public async Task VirtualFunctionInheritanceObsolete() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [Obsolete("Function is obsolete")]
                                [VirtualFunction(5)]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public unsafe partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public const int StructSize = 4;
                                                   [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                                   public unsafe partial struct BaseStructVirtualTable
                                                   {
                                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(40)] public delegate* unmanaged <BaseStruct*, int, void*, int> TestFunction;
                                                   }
                                                   [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStructVirtualTable* VirtualTable;
                                                   public static partial class Delegates
                                                   {
                                                       public delegate int TestFunction(BaseStruct* thisPtr, int argOne, void* argTwo);
                                                   }
                                                   [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                   public partial int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((BaseStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                               }
                                               """;

        const string childStructInheritanceGeneratedCode = """
                                                           // <auto-generated/>
                                                           unsafe partial struct ChildStruct
                                                           {
                                                               /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                               [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                               [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                                               public unsafe partial struct ChildStructVirtualTable
                                                               {
                                                                   [global::System.Runtime.InteropServices.FieldOffsetAttribute(40)] public delegate* unmanaged <ChildStruct*, int, void*, int> TestFunction;
                                                               }
                                                               [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public ChildStructVirtualTable* VirtualTable;
                                                               public static partial class Delegates
                                                               {
                                                                   public delegate int TestFunction(ChildStruct* thisPtr, int argOne, void* argTwo);
                                                               }
                                                               /// <inheritdoc cref="BaseStruct.TestFunction(int, void*)" />
                                                               /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                               [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                               [global::System.ObsoleteAttribute("Function is obsolete", false)]
                                                               public int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((ChildStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                                           }
                                                           """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceGeneratedCode));
    }

    [Fact]
    public async Task VirtualFunctionInheritanceExistingVirtualTable() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [VirtualFunction(5)]
                                public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public unsafe partial struct ChildStruct
                            {
                                [VirtualFunction(6)]
                                public partial int TestFunction2();
                            }
                            """;

        const string baseStructGeneratedCode = """
                                               // <auto-generated/>
                                               unsafe partial struct BaseStruct
                                               {
                                                   public const int StructSize = 4;
                                                   [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                                   public unsafe partial struct BaseStructVirtualTable
                                                   {
                                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(40)] public delegate* unmanaged <BaseStruct*, int, void*, int> TestFunction;
                                                   }
                                                   [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStructVirtualTable* VirtualTable;
                                                   public static partial class Delegates
                                                   {
                                                       public delegate int TestFunction(BaseStruct* thisPtr, int argOne, void* argTwo);
                                                   }
                                                   [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                   public partial int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((BaseStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                               }
                                               """;

        const string childStructGeneratedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    public const int StructSize = 8;
                                                    [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                                    public unsafe partial struct ChildStructVirtualTable
                                                    {
                                                        [global::System.Runtime.InteropServices.FieldOffsetAttribute(48)] public delegate* unmanaged <ChildStruct*, int> TestFunction2;
                                                    }
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public ChildStructVirtualTable* VirtualTable;
                                                    public static partial class Delegates
                                                    {
                                                        public delegate int TestFunction2(ChildStruct* thisPtr);
                                                    }
                                                    [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                    public partial int TestFunction2() => VirtualTable->TestFunction2((ChildStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                                                }
                                                """;

        const string childStructInheritanceGeneratedCode = """
                                                           // <auto-generated/>
                                                           unsafe partial struct ChildStruct
                                                           {
                                                               /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                               [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                               public unsafe partial struct ChildStructVirtualTable
                                                               {
                                                                   [global::System.Runtime.InteropServices.FieldOffsetAttribute(40)] public delegate* unmanaged <ChildStruct*, int, void*, int> TestFunction;
                                                               }
                                                               public static partial class Delegates
                                                               {
                                                                   public delegate int TestFunction(ChildStruct* thisPtr, int argOne, void* argTwo);
                                                               }
                                                               /// <inheritdoc cref="BaseStruct.TestFunction(int, void*)" />
                                                               /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                               [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                               public int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((ChildStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                                           }
                                                           """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructGeneratedCode),
            ("ChildStruct.InteropGenerator.g.cs", childStructGeneratedCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceGeneratedCode));
    }

    [Fact]
    public async Task VirtualFunctionInheritanceNotMainParent() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct2
                            {
                                [VirtualFunction(5)] public partial int TestFunction(int argOne, void * argTwo);
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            [Inherits<BaseStruct2>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStruct2Code = """
                                       // <auto-generated/>
                                       unsafe partial struct BaseStruct2
                                       {
                                           public const int StructSize = 4;
                                           [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                           public unsafe partial struct BaseStruct2VirtualTable
                                           {
                                               [global::System.Runtime.InteropServices.FieldOffsetAttribute(40)] public delegate* unmanaged <BaseStruct2*, int, void*, int> TestFunction;
                                           }
                                           [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct2VirtualTable* VirtualTable;
                                           public static partial class Delegates
                                           {
                                               public delegate int TestFunction(BaseStruct2* thisPtr, int argOne, void* argTwo);
                                           }
                                           [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                           public partial int TestFunction(int argOne, void* argTwo) => VirtualTable->TestFunction((BaseStruct2*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), argOne, argTwo);
                                       }
                                       """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct2">BaseStruct2</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public BaseStruct2 BaseStruct2;
                                                      /// <inheritdoc cref="BaseStruct2.TestFunction(int, void*)" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct2">BaseStruct2</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction(int argOne, void* argTwo) => BaseStruct2.TestFunction(argOne, argTwo);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct2.InteropGenerator.g.cs", baseStruct2Code),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task PublicMethodInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                public int TestFunction() => 0;
                                private int TestPrivateFunction() => 0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction()" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction() => BaseStruct.TestFunction();
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
              code,
          ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task PublicMethodInheritanceObsolete() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [Obsolete("Function is obsolete", false)]
                                public int TestFunction() => 0;
                                private int TestPrivateFunction() => 0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction()" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      [global::System.ObsoleteAttribute("Function is obsolete", false)]
                                                      public int TestFunction() => BaseStruct.TestFunction();
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
              code,
          ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task MethodWithDefaultValueInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                public int TestFunction(int arg = 5) => 0;
                                private int TestPrivateFunction() => 0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction(int)" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction(int arg = 5) => BaseStruct.TestFunction(arg);
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task MethodWithGenericArgumentInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                public int TestFunction<T>() => 0;
                                private int TestPrivateFunction() => 0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction{T}()" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction<T>() => BaseStruct.TestFunction<T>();
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task MethodWithGenericArgumentAndTypeConstraintsInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                public int TestFunction<T>() where T : unmanaged => 0;
                                private int TestPrivateFunction() => 0;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestFunction{T}()" />
                                                      /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                      public int TestFunction<T>() where T : unmanaged => BaseStruct.TestFunction<T>();
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task PublicPropertyInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] private bool _testValue;
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(8)] private int _testPrivateValue;
                                
                                public bool TestProperty { get => _testValue; set => _testValue = value; }
                                private int TestPrivateProperty { get => _testPrivateValue; set => _testPrivateValue = value; }
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestProperty" />
                                                      /// <remarks>Property inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      public bool TestProperty
                                                      {
                                                          get => BaseStruct.TestProperty;
                                                          set => BaseStruct.TestProperty = value;
                                                      }
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
              code,
          ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task PublicPropertyObsoleteInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] private bool _testValue;
                                
                                [global::System.ObsoleteAttribute("Property is obsolete")]
                                public bool TestProperty { get => _testValue; set => _testValue = value; }
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestProperty" />
                                                      /// <remarks>Property inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      [global::System.ObsoleteAttribute("Property is obsolete", false)]
                                                      public bool TestProperty
                                                      {
                                                          get => BaseStruct.TestProperty;
                                                          set => BaseStruct.TestProperty = value;
                                                      }
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
              code,
          ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task PublicPropertyRefModifiersInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] private bool _testValue;
                                
                                [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public ref bool TestProperty => ref _testValue;
                            }

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string childStructInheritanceCode = """
                                                  // <auto-generated/>
                                                  unsafe partial struct ChildStruct
                                                  {
                                                      /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                      /// <inheritdoc cref="BaseStruct.TestProperty" />
                                                      /// <remarks>Property inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                      public ref bool TestProperty
                                                      {
                                                          get => ref BaseStruct.TestProperty;
                                                      }
                                                  }
                                                  """;

        await VerifyIG.VerifyGeneratorAsync(
              code,
          ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritanceCode));
    }

    [Fact]
    public async Task StringOverloadsInheritance() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [GenerateStringOverloads]
                                public int TestFunction(int argOne, CStringPointer stringArg) { return 0; }
                            }
                            
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                                      // <auto-generated/>
                                      unsafe partial struct BaseStruct
                                      {
                                          public const int StructSize = 4;
                                          public int TestFunction(int argOne, string stringArg)
                                          {
                                              int stringArgUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(stringArg);
                                              Span<byte> stringArgBytes = stringArgUTF8StrLen <= 511 ? stackalloc byte[512] : new byte[stringArgUTF8StrLen + 1];
                                              global::System.Text.Encoding.UTF8.GetBytes(stringArg, stringArgBytes);
                                              stringArgBytes[stringArgUTF8StrLen] = 0;
                                              fixed (byte* stringArgPtr = stringArgBytes)
                                              {
                                                  return TestFunction(argOne, stringArgPtr);
                                              }
                                          }
                                          public int TestFunction(int argOne, ReadOnlySpan<byte> stringArg)
                                          {
                                              fixed (byte* stringArgPtr = stringArg)
                                              {
                                                  return TestFunction(argOne, stringArgPtr);
                                              }
                                          }
                                      }
                                      """;

        const string childStructGeneratedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TestFunction(int, global::InteropGenerator.Runtime.CStringPointer)" />
                                                    /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                    public int TestFunction(int argOne, global::InteropGenerator.Runtime.CStringPointer stringArg) => BaseStruct.TestFunction(argOne, stringArg);
                                                    public int TestFunction(int argOne, string stringArg)
                                                    {
                                                        int stringArgUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(stringArg);
                                                        Span<byte> stringArgBytes = stringArgUTF8StrLen <= 511 ? stackalloc byte[512] : new byte[stringArgUTF8StrLen + 1];
                                                        global::System.Text.Encoding.UTF8.GetBytes(stringArg, stringArgBytes);
                                                        stringArgBytes[stringArgUTF8StrLen] = 0;
                                                        fixed (byte* stringArgPtr = stringArgBytes)
                                                        {
                                                            return TestFunction(argOne, stringArgPtr);
                                                        }
                                                    }
                                                    public int TestFunction(int argOne, ReadOnlySpan<byte> stringArg)
                                                    {
                                                        fixed (byte* stringArgPtr = stringArg)
                                                        {
                                                            return TestFunction(argOne, stringArgPtr);
                                                        }
                                                    }
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructGeneratedCode));
    }

    [Fact]
    public async Task StringOverloadsInheritanceObsolete() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 4)]
                            [GenerateInterop(true)]
                            public unsafe partial struct BaseStruct
                            {
                                [Obsolete("This function is obsolete")]
                                [GenerateStringOverloads]
                                public int TestFunction(int argOne, CStringPointer stringArg) { return 0; }
                            }
                            
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size = 8)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                                      // <auto-generated/>
                                      unsafe partial struct BaseStruct
                                      {
                                          public const int StructSize = 4;
                                          [global::System.ObsoleteAttribute("This function is obsolete", false)]
                                          public int TestFunction(int argOne, string stringArg)
                                          {
                                              int stringArgUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(stringArg);
                                              Span<byte> stringArgBytes = stringArgUTF8StrLen <= 511 ? stackalloc byte[512] : new byte[stringArgUTF8StrLen + 1];
                                              global::System.Text.Encoding.UTF8.GetBytes(stringArg, stringArgBytes);
                                              stringArgBytes[stringArgUTF8StrLen] = 0;
                                              fixed (byte* stringArgPtr = stringArgBytes)
                                              {
                                                  return TestFunction(argOne, stringArgPtr);
                                              }
                                          }
                                          [global::System.ObsoleteAttribute("This function is obsolete", false)]
                                          public int TestFunction(int argOne, ReadOnlySpan<byte> stringArg)
                                          {
                                              fixed (byte* stringArgPtr = stringArg)
                                              {
                                                  return TestFunction(argOne, stringArgPtr);
                                              }
                                          }
                                      }
                                      """;

        const string childStructGeneratedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TestFunction(int, global::InteropGenerator.Runtime.CStringPointer)" />
                                                    /// <remarks>Method inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                    [global::System.ObsoleteAttribute("This function is obsolete", false)]
                                                    public int TestFunction(int argOne, global::InteropGenerator.Runtime.CStringPointer stringArg) => BaseStruct.TestFunction(argOne, stringArg);
                                                    [global::System.ObsoleteAttribute("This function is obsolete", false)]
                                                    public int TestFunction(int argOne, string stringArg)
                                                    {
                                                        int stringArgUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(stringArg);
                                                        Span<byte> stringArgBytes = stringArgUTF8StrLen <= 511 ? stackalloc byte[512] : new byte[stringArgUTF8StrLen + 1];
                                                        global::System.Text.Encoding.UTF8.GetBytes(stringArg, stringArgBytes);
                                                        stringArgBytes[stringArgUTF8StrLen] = 0;
                                                        fixed (byte* stringArgPtr = stringArgBytes)
                                                        {
                                                            return TestFunction(argOne, stringArgPtr);
                                                        }
                                                    }
                                                    [global::System.ObsoleteAttribute("This function is obsolete", false)]
                                                    public int TestFunction(int argOne, ReadOnlySpan<byte> stringArg)
                                                    {
                                                        fixed (byte* stringArgPtr = stringArg)
                                                        {
                                                            return TestFunction(argOne, stringArgPtr);
                                                        }
                                                    }
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructGeneratedCode));
    }

    [Fact]
    public async Task FixedArrayInheritance() {
        const string code = """
                            using InteropGeneratorTesting;

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] [FixedSizeArray] internal FixedSizeArray10<int> _tenIntArray;
                            }
                            
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                              // <auto-generated/>
                              unsafe partial struct BaseStruct
                              {
                                  public const int StructSize = 40;
                                  /// <inheritdoc cref="_tenIntArray" />
                                  [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<int> TenIntArray => _tenIntArray;
                              }
                              """;

        const string childStructInheritedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<int> TenIntArray => BaseStruct._tenIntArray;
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritedCode),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }

    [Fact]
    public async Task FixedArrayInheritanceObsolete() {
        const string code = """
                            using InteropGeneratorTesting;

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [Obsolete("This field is obsolete")]
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] [FixedSizeArray] internal FixedSizeArray10<int> _tenIntArray;
                            }
                            
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                              // <auto-generated/>
                              unsafe partial struct BaseStruct
                              {
                                  public const int StructSize = 40;
                                  /// <inheritdoc cref="_tenIntArray" />
                                  [global::System.ObsoleteAttribute("This field is obsolete", false)]
                                  [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<int> TenIntArray => _tenIntArray;
                              }
                              """;

        const string childStructInheritedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.ObsoleteAttribute("This field is obsolete", false)]
                                                    [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<int> TenIntArray => BaseStruct._tenIntArray;
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritedCode),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }

    [Fact]
    public async Task FixedArrayByteStringInheritance() {
        const string code = """
                            using InteropGeneratorTesting;

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] [FixedSizeArray(isString: true)] internal FixedSizeArray10<byte> _tenIntArray;
                            }
                            
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                              // <auto-generated/>
                              unsafe partial struct BaseStruct
                              {
                                  public const int StructSize = 40;
                                  /// <inheritdoc cref="_tenIntArray" />
                                  [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<byte> TenIntArray => _tenIntArray;
                                  /// <inheritdoc cref="_tenIntArray" />
                                  public string TenIntArrayString
                                  {
                                      get => global::System.Text.Encoding.UTF8.GetString(global::System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpanFromNullTerminated((byte*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref _tenIntArray[0])));
                                      set
                                      {
                                          if (global::System.Text.Encoding.UTF8.GetByteCount(value) > 10 - 1)
                                          {
                                              InteropGenerator.Runtime.ThrowHelper.ThrowStringSizeTooLarge("TenIntArrayString", 10);
                                          }
                                          global::System.Text.Encoding.UTF8.GetBytes(value.AsSpan(), _tenIntArray);
                                          _tenIntArray[9] = 0;
                                      }
                                  }
                              }
                              """;

        const string childStructInheritedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<byte> TenIntArray => BaseStruct._tenIntArray;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    public string TenIntArrayString
                                                    {
                                                        get => global::System.Text.Encoding.UTF8.GetString(global::System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpanFromNullTerminated((byte*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref BaseStruct._tenIntArray[0])));
                                                        set
                                                        {
                                                            if (global::System.Text.Encoding.UTF8.GetByteCount(value) > 10 - 1)
                                                            {
                                                                InteropGenerator.Runtime.ThrowHelper.ThrowStringSizeTooLarge("TenIntArrayString", 10);
                                                            }
                                                            global::System.Text.Encoding.UTF8.GetBytes(value.AsSpan(), BaseStruct._tenIntArray);
                                                            BaseStruct._tenIntArray[9] = 0;
                                                        }
                                                    }
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritedCode),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }

    [Fact]
    public async Task FixedArrayByteStringInheritanceObsolete() {
        const string code = """
                            using InteropGeneratorTesting;

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [Obsolete("This field is obsolete")]
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] [FixedSizeArray(isString: true)] internal FixedSizeArray10<byte> _tenIntArray;
                            }
                            
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                              // <auto-generated/>
                              unsafe partial struct BaseStruct
                              {
                                  public const int StructSize = 40;
                                  /// <inheritdoc cref="_tenIntArray" />
                                  [global::System.ObsoleteAttribute("This field is obsolete", false)]
                                  [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<byte> TenIntArray => _tenIntArray;
                                  /// <inheritdoc cref="_tenIntArray" />
                                  [global::System.ObsoleteAttribute("This field is obsolete", false)]
                                  public string TenIntArrayString
                                  {
                                      get => global::System.Text.Encoding.UTF8.GetString(global::System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpanFromNullTerminated((byte*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref _tenIntArray[0])));
                                      set
                                      {
                                          if (global::System.Text.Encoding.UTF8.GetByteCount(value) > 10 - 1)
                                          {
                                              InteropGenerator.Runtime.ThrowHelper.ThrowStringSizeTooLarge("TenIntArrayString", 10);
                                          }
                                          global::System.Text.Encoding.UTF8.GetBytes(value.AsSpan(), _tenIntArray);
                                          _tenIntArray[9] = 0;
                                      }
                                  }
                              }
                              """;

        const string childStructInheritedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.ObsoleteAttribute("This field is obsolete", false)]
                                                    [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<byte> TenIntArray => BaseStruct._tenIntArray;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.ObsoleteAttribute("This field is obsolete", false)]
                                                    public string TenIntArrayString
                                                    {
                                                        get => global::System.Text.Encoding.UTF8.GetString(global::System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpanFromNullTerminated((byte*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref BaseStruct._tenIntArray[0])));
                                                        set
                                                        {
                                                            if (global::System.Text.Encoding.UTF8.GetByteCount(value) > 10 - 1)
                                                            {
                                                                InteropGenerator.Runtime.ThrowHelper.ThrowStringSizeTooLarge("TenIntArrayString", 10);
                                                            }
                                                            global::System.Text.Encoding.UTF8.GetBytes(value.AsSpan(), BaseStruct._tenIntArray);
                                                            BaseStruct._tenIntArray[9] = 0;
                                                        }
                                                    }
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritedCode),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }

    [Fact]
    public async Task FixedArrayCharStringInheritance() {
        const string code = """
                            using InteropGeneratorTesting;

                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop(true)]
                            public partial struct BaseStruct
                            {
                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] [FixedSizeArray(isString: true)] internal FixedSizeArray10<char> _tenIntArray;
                            }
                            
                            [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=40)]
                            [GenerateInterop]
                            [Inherits<BaseStruct>]
                            public partial struct ChildStruct
                            {
                            }
                            """;

        const string baseStructCode = """
                                      // <auto-generated/>
                                      unsafe partial struct BaseStruct
                                      {
                                          public const int StructSize = 40;
                                          /// <inheritdoc cref="_tenIntArray" />
                                          [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<char> TenIntArray => _tenIntArray;
                                          /// <inheritdoc cref="_tenIntArray" />
                                          public string TenIntArrayString
                                          {
                                              get => new string((char*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref _tenIntArray[0]));
                                              set
                                              {
                                                  if (value.Length > 10 - 1)
                                                  {
                                                      InteropGenerator.Runtime.ThrowHelper.ThrowStringSizeTooLarge("TenIntArrayString", 10);
                                                  }
                                                  value.CopyTo(_tenIntArray);
                                                  _tenIntArray[9] = '\0';
                                              }
                                          }
                                      }
                                      """;

        const string childStructInheritedCode = """
                                                // <auto-generated/>
                                                unsafe partial struct ChildStruct
                                                {
                                                    /// <summary>Inherited parent class accessor for <see cref="BaseStruct">BaseStruct</see></summary>
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseStruct BaseStruct;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<char> TenIntArray => BaseStruct._tenIntArray;
                                                    /// <inheritdoc cref="BaseStruct.TenIntArray" />
                                                    /// <remarks>Field inherited from parent class <see cref="BaseStruct">BaseStruct</see>.</remarks>
                                                    public string TenIntArrayString
                                                    {
                                                        get => new string((char*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref BaseStruct._tenIntArray[0]));
                                                        set
                                                        {
                                                            if (value.Length > 10 - 1)
                                                            {
                                                                InteropGenerator.Runtime.ThrowHelper.ThrowStringSizeTooLarge("TenIntArrayString", 10);
                                                            }
                                                            value.CopyTo(BaseStruct._tenIntArray);
                                                            BaseStruct._tenIntArray[9] = '\0';
                                                        }
                                                    }
                                                }
                                                """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseStruct.InteropGenerator.g.cs", baseStructCode),
            ("ChildStruct.Inheritance.InteropGenerator.g.cs", childStructInheritedCode),
            SourceGeneration.GetFixedSizeArraySource([10]));
    }

    [Fact]
    public async Task ComplexInheritance() {
        const string code = """
                            using System.Runtime.CompilerServices;
                            using System.Runtime.InteropServices;
                            using InteropGeneratorTesting;
                            
                            // Child        size 32
                            //   MiddleA    size 12, offset 0
                            //     BaseA_A  size 4
                            //     BaseA_B  size 4
                            //   BaseB      size 4, explicit offset 16
                            //   MiddleC    size 8, offset 20
                            //     BaseC    size 4
                            
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(isInherited: true)]
                            public unsafe partial struct BaseA_A
                            {
                                [FieldOffset(0)] [FixedSizeArray] internal FixedSizeArray4<byte> _baseA_A_field0;
                                
                                [VirtualFunction(0)]
                                public partial void BaseA_A_vf0(int* arg);
                                
                                [MemberFunction("E8 ?? ?? ?? ??")]
                                public partial int BaseA_mf();
                                
                                public static void BaseA_StaticFunction() { return; }
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(isInherited: true)]
                            public unsafe partial struct BaseA_B
                            {
                                [FieldOffset(0)] public int BaseA_B_field0;
                                
                                [VirtualFunction(0)]
                                [GenerateStringOverloads]
                                public partial void BaseA_B_vf0(CStringPointer arg);
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size=12)]
                            [GenerateInterop(isInherited: true)]
                            [Inherits<BaseA_A>]
                            [Inherits<BaseA_B>]
                            [VirtualTable("E8 ?? ?? ?? ??", 1)]
                            public unsafe partial struct MiddleA
                            {
                                [FieldOffset(8)] public int MiddleA_field8;
                                
                                [VirtualFunction(4)]
                                public partial void MiddleA_vf4(int* arg);
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(isInherited: true)]
                            public unsafe partial struct BaseB
                            {
                                [FieldOffset(0)] public int BaseB_field0;
                                
                                [MemberFunction("E8 ?? ?? ?? ??")]
                                public partial int BaseB_mf();
                                
                                public void BaseB_method() { return; }
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size=4)]
                            [GenerateInterop(isInherited: true)]
                            public unsafe partial struct BaseC
                            {
                                [FieldOffset(0)] public int BaseC_field0;
                                
                                [VirtualFunction(0)]
                                public partial void BaseC_vf0(int* arg);
                                
                                [StaticAddress("E8 ?? ?? ?? ??", 1)]
                                public partial byte* BaseC_sa();
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size=8)]
                            [GenerateInterop(isInherited: true)]
                            [Inherits<BaseC>]
                            public unsafe partial struct MiddleC
                            {
                                [FieldOffset(4)] public int MiddleC_field4;
                                
                                [MemberFunction("E8 ?? ?? ?? ??")]
                                public partial int MiddleC_mf();
                            }
                            
                            [StructLayout(LayoutKind.Explicit, Size=32)]
                            [GenerateInterop]
                            [Inherits<MiddleA>]
                            [Inherits<BaseB>(parentOffset: 16)]
                            [Inherits<MiddleC>]
                            public unsafe partial struct Child
                            {
                                [FieldOffset(28)] public int Child_field28;
                                
                                [VirtualFunction(10)]
                                public partial void Child_vf10(int* arg);
                            }
                            """;

        const string baseA_ACode = """
                                 // <auto-generated/>
                                 unsafe partial struct BaseA_A
                                 {
                                     public const int StructSize = 4;
                                     public static class Addresses
                                     {
                                         public static readonly global::InteropGenerator.Runtime.Address BaseA_mf = new global::InteropGenerator.Runtime.Address("BaseA_A.BaseA_mf", "E8 ?? ?? ?? ?? ?? ?? ??", new ushort[] {1}, new ulong[] {0x00000000000000E8}, new ulong[] {0x00000000000000FF}, 0);
                                     }
                                     [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                     public unsafe partial struct BaseA_AVirtualTable
                                     {
                                         [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <BaseA_A*, int*, void> BaseA_A_vf0;
                                     }
                                     [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseA_AVirtualTable* VirtualTable;
                                     public static partial class Delegates
                                     {
                                         public delegate int BaseA_mf(BaseA_A* thisPtr);
                                         public delegate void BaseA_A_vf0(BaseA_A* thisPtr, int* arg);
                                     }
                                     public unsafe static class MemberFunctionPointers
                                     {
                                         public static delegate* unmanaged <BaseA_A*, int> BaseA_mf => (delegate* unmanaged <BaseA_A*, int>) BaseA_A.Addresses.BaseA_mf.Value;
                                     }
                                     public partial int BaseA_mf()
                                     {
                                         if (MemberFunctionPointers.BaseA_mf is null)
                                         {
                                             InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseA_A.BaseA_mf", "E8 ?? ?? ?? ??");
                                         }
                                         return MemberFunctionPointers.BaseA_mf((BaseA_A*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                                     }
                                     [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                     public partial void BaseA_A_vf0(int* arg) => VirtualTable->BaseA_A_vf0((BaseA_A*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                     /// <inheritdoc cref="_baseA_A_field0" />
                                     [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<byte> BaseA_A_field0 => _baseA_A_field0;
                                 }
                                 """;

        const string baseA_BCode = """
                                   // <auto-generated/>
                                   unsafe partial struct BaseA_B
                                   {
                                       public const int StructSize = 4;
                                       [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                       public unsafe partial struct BaseA_BVirtualTable
                                       {
                                           [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <BaseA_B*, global::InteropGenerator.Runtime.CStringPointer, void> BaseA_B_vf0;
                                       }
                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseA_BVirtualTable* VirtualTable;
                                       public static partial class Delegates
                                       {
                                           public delegate void BaseA_B_vf0(BaseA_B* thisPtr, global::InteropGenerator.Runtime.CStringPointer arg);
                                       }
                                       [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                       public partial void BaseA_B_vf0(global::InteropGenerator.Runtime.CStringPointer arg) => VirtualTable->BaseA_B_vf0((BaseA_B*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                       public void BaseA_B_vf0(string arg)
                                       {
                                           int argUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(arg);
                                           Span<byte> argBytes = argUTF8StrLen <= 511 ? stackalloc byte[512] : new byte[argUTF8StrLen + 1];
                                           global::System.Text.Encoding.UTF8.GetBytes(arg, argBytes);
                                           argBytes[argUTF8StrLen] = 0;
                                           fixed (byte* argPtr = argBytes)
                                           {
                                               BaseA_B_vf0(argPtr);
                                           }
                                       }
                                       public void BaseA_B_vf0(ReadOnlySpan<byte> arg)
                                       {
                                           fixed (byte* argPtr = arg)
                                           {
                                               BaseA_B_vf0(argPtr);
                                           }
                                       }
                                   }
                                   """;

        const string middleACode = """
                                   // <auto-generated/>
                                   unsafe partial struct MiddleA
                                   {
                                       public const int StructSize = 12;
                                       public static class Addresses
                                       {
                                           public static readonly global::InteropGenerator.Runtime.Address StaticVirtualTable = new global::InteropGenerator.Runtime.Address("MiddleA.StaticVirtualTable", "E8 ?? ?? ?? ?? ?? ?? ??", new ushort[] {1}, new ulong[] {0x00000000000000E8}, new ulong[] {0x00000000000000FF}, 0);
                                       }
                                       [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                       public unsafe partial struct MiddleAVirtualTable
                                       {
                                           [global::System.Runtime.InteropServices.FieldOffsetAttribute(32)] public delegate* unmanaged <MiddleA*, int*, void> MiddleA_vf4;
                                       }
                                       [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public MiddleAVirtualTable* VirtualTable;
                                       public static MiddleAVirtualTable* StaticVirtualTablePointer => (MiddleAVirtualTable*)Addresses.StaticVirtualTable.Value;
                                       public static partial class Delegates
                                       {
                                           public delegate void MiddleA_vf4(MiddleA* thisPtr, int* arg);
                                       }
                                       [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                       public partial void MiddleA_vf4(int* arg) => VirtualTable->MiddleA_vf4((MiddleA*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                   }
                                   """;

        const string baseBCode = """
                                 // <auto-generated/>
                                 unsafe partial struct BaseB
                                 {
                                     public const int StructSize = 4;
                                     public static class Addresses
                                     {
                                         public static readonly global::InteropGenerator.Runtime.Address BaseB_mf = new global::InteropGenerator.Runtime.Address("BaseB.BaseB_mf", "E8 ?? ?? ?? ?? ?? ?? ??", new ushort[] {1}, new ulong[] {0x00000000000000E8}, new ulong[] {0x00000000000000FF}, 0);
                                     }
                                     public static partial class Delegates
                                     {
                                         public delegate int BaseB_mf(BaseB* thisPtr);
                                     }
                                     public unsafe static class MemberFunctionPointers
                                     {
                                         public static delegate* unmanaged <BaseB*, int> BaseB_mf => (delegate* unmanaged <BaseB*, int>) BaseB.Addresses.BaseB_mf.Value;
                                     }
                                     public partial int BaseB_mf()
                                     {
                                         if (MemberFunctionPointers.BaseB_mf is null)
                                         {
                                             InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseB.BaseB_mf", "E8 ?? ?? ?? ??");
                                         }
                                         return MemberFunctionPointers.BaseB_mf((BaseB*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                                     }
                                 }
                                 """;

        const string baseCCode = """
                                 // <auto-generated/>
                                 unsafe partial struct BaseC
                                 {
                                     public const int StructSize = 4;
                                     public static class Addresses
                                     {
                                         public static readonly global::InteropGenerator.Runtime.Address BaseC_sa = new global::InteropGenerator.Runtime.Address("BaseC.BaseC_sa", "E8 ?? ?? ?? ?? ?? ?? ??", new ushort[] {1}, new ulong[] {0x00000000000000E8}, new ulong[] {0x00000000000000FF}, 0);
                                     }
                                     [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                     public unsafe partial struct BaseCVirtualTable
                                     {
                                         [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <BaseC*, int*, void> BaseC_vf0;
                                     }
                                     [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseCVirtualTable* VirtualTable;
                                     public static partial class Delegates
                                     {
                                         public delegate void BaseC_vf0(BaseC* thisPtr, int* arg);
                                     }
                                     [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                     public partial void BaseC_vf0(int* arg) => VirtualTable->BaseC_vf0((BaseC*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                     public unsafe static class StaticAddressPointers
                                     {
                                         public static byte* pBaseC_sa => (byte*)BaseC.Addresses.BaseC_sa.Value;
                                     }
                                     public partial byte* BaseC_sa()
                                     {
                                         if (StaticAddressPointers.pBaseC_sa is null)
                                         {
                                             InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("BaseC.BaseC_sa", "E8 ?? ?? ?? ??");
                                         }
                                         return StaticAddressPointers.pBaseC_sa;
                                     }
                                 }
                                 """;

        const string middleCCode = """
                                   // <auto-generated/>
                                   unsafe partial struct MiddleC
                                   {
                                       public const int StructSize = 8;
                                       public static class Addresses
                                       {
                                           public static readonly global::InteropGenerator.Runtime.Address MiddleC_mf = new global::InteropGenerator.Runtime.Address("MiddleC.MiddleC_mf", "E8 ?? ?? ?? ?? ?? ?? ??", new ushort[] {1}, new ulong[] {0x00000000000000E8}, new ulong[] {0x00000000000000FF}, 0);
                                       }
                                       public static partial class Delegates
                                       {
                                           public delegate int MiddleC_mf(MiddleC* thisPtr);
                                       }
                                       public unsafe static class MemberFunctionPointers
                                       {
                                           public static delegate* unmanaged <MiddleC*, int> MiddleC_mf => (delegate* unmanaged <MiddleC*, int>) MiddleC.Addresses.MiddleC_mf.Value;
                                       }
                                       public partial int MiddleC_mf()
                                       {
                                           if (MemberFunctionPointers.MiddleC_mf is null)
                                           {
                                               InteropGenerator.Runtime.ThrowHelper.ThrowNullAddress("MiddleC.MiddleC_mf", "E8 ?? ?? ?? ??");
                                           }
                                           return MemberFunctionPointers.MiddleC_mf((MiddleC*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                                       }
                                   }
                                   """;

        const string childCode = """
                                 // <auto-generated/>
                                 unsafe partial struct Child
                                 {
                                     public const int StructSize = 32;
                                     [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                     public unsafe partial struct ChildVirtualTable
                                     {
                                         [global::System.Runtime.InteropServices.FieldOffsetAttribute(80)] public delegate* unmanaged <Child*, int*, void> Child_vf10;
                                     }
                                     [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public ChildVirtualTable* VirtualTable;
                                     public static partial class Delegates
                                     {
                                         public delegate void Child_vf10(Child* thisPtr, int* arg);
                                     }
                                     [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                     public partial void Child_vf10(int* arg) => VirtualTable->Child_vf10((Child*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                 }
                                 """;

        const string middleAInheritedCode = """
                                            // <auto-generated/>
                                            unsafe partial struct MiddleA
                                            {
                                                /// <summary>Inherited parent class accessor for <see cref="BaseA_A">BaseA_A</see></summary>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseA_A BaseA_A;
                                                /// <summary>Inherited parent class accessor for <see cref="BaseA_B">BaseA_B</see></summary>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public BaseA_B BaseA_B;
                                                /// <inheritdoc cref="BaseA_B.BaseA_B_field0" />
                                                /// <remarks>Field inherited from parent class <see cref="BaseA_B">BaseA_B</see>.</remarks>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public int BaseA_B_field0;
                                                /// <inheritdoc cref="BaseA_A.BaseA_mf()" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseA_A">BaseA_A</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public int BaseA_mf() => BaseA_A.BaseA_mf();
                                                public unsafe partial struct MiddleAVirtualTable
                                                {
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <MiddleA*, int*, void> BaseA_A_vf0;
                                                }
                                                public static partial class Delegates
                                                {
                                                    public delegate void BaseA_A_vf0(MiddleA* thisPtr, int* arg);
                                                }
                                                /// <inheritdoc cref="BaseA_A.BaseA_A_vf0(int*)" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseA_A">BaseA_A</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void BaseA_A_vf0(int* arg) => VirtualTable->BaseA_A_vf0((MiddleA*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                                /// <inheritdoc cref="BaseA_B.BaseA_B_vf0(global::InteropGenerator.Runtime.CStringPointer)" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseA_B">BaseA_B</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void BaseA_B_vf0(global::InteropGenerator.Runtime.CStringPointer arg) => BaseA_B.BaseA_B_vf0(arg);
                                                public void BaseA_B_vf0(string arg)
                                                {
                                                    int argUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(arg);
                                                    Span<byte> argBytes = argUTF8StrLen <= 511 ? stackalloc byte[512] : new byte[argUTF8StrLen + 1];
                                                    global::System.Text.Encoding.UTF8.GetBytes(arg, argBytes);
                                                    argBytes[argUTF8StrLen] = 0;
                                                    fixed (byte* argPtr = argBytes)
                                                    {
                                                        BaseA_B_vf0(argPtr);
                                                    }
                                                }
                                                public void BaseA_B_vf0(ReadOnlySpan<byte> arg)
                                                {
                                                    fixed (byte* argPtr = arg)
                                                    {
                                                        BaseA_B_vf0(argPtr);
                                                    }
                                                }
                                                /// <inheritdoc cref="BaseA_A.BaseA_A_field0" />
                                                /// <remarks>Field inherited from parent class <see cref="BaseA_A">BaseA_A</see>.</remarks>
                                                [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<byte> BaseA_A_field0 => BaseA_A._baseA_A_field0;
                                            }
                                            """;

        const string middleCInheritedCode = """
                                            // <auto-generated/>
                                            unsafe partial struct MiddleC
                                            {
                                                /// <summary>Inherited parent class accessor for <see cref="BaseC">BaseC</see></summary>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public BaseC BaseC;
                                                /// <inheritdoc cref="BaseC.BaseC_field0" />
                                                /// <remarks>Field inherited from parent class <see cref="BaseC">BaseC</see>.</remarks>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public int BaseC_field0;
                                                [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                                public unsafe partial struct MiddleCVirtualTable
                                                {
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <MiddleC*, int*, void> BaseC_vf0;
                                                }
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public MiddleCVirtualTable* VirtualTable;
                                                public static partial class Delegates
                                                {
                                                    public delegate void BaseC_vf0(MiddleC* thisPtr, int* arg);
                                                }
                                                /// <inheritdoc cref="BaseC.BaseC_vf0(int*)" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseC">BaseC</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void BaseC_vf0(int* arg) => VirtualTable->BaseC_vf0((MiddleC*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                            }
                                            """;

        const string childInheritedCode = """
                                            // <auto-generated/>
                                            unsafe partial struct Child
                                            {
                                                /// <inheritdoc cref="BaseA_B.BaseA_B_field0" />
                                                /// <remarks>Field inherited from parent class <see cref="BaseA_B">BaseA_B</see>.</remarks>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(4)] public int BaseA_B_field0;
                                                /// <summary>Inherited parent class accessor for <see cref="MiddleA">MiddleA</see></summary>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public MiddleA MiddleA;
                                                /// <inheritdoc cref="MiddleA.MiddleA_field8" />
                                                /// <remarks>Field inherited from parent class <see cref="MiddleA">MiddleA</see>.</remarks>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(8)] public int MiddleA_field8;
                                                /// <summary>Inherited parent class accessor for <see cref="BaseB">BaseB</see></summary>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(16)] public BaseB BaseB;
                                                /// <inheritdoc cref="BaseB.BaseB_field0" />
                                                /// <remarks>Field inherited from parent class <see cref="BaseB">BaseB</see>.</remarks>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(16)] public int BaseB_field0;
                                                /// <inheritdoc cref="BaseC.BaseC_field0" />
                                                /// <remarks>Field inherited from parent class <see cref="BaseC">BaseC</see>.</remarks>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(20)] public int BaseC_field0;
                                                /// <summary>Inherited parent class accessor for <see cref="MiddleC">MiddleC</see></summary>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(20)] public MiddleC MiddleC;
                                                /// <inheritdoc cref="MiddleC.MiddleC_field4" />
                                                /// <remarks>Field inherited from parent class <see cref="MiddleC">MiddleC</see>.</remarks>
                                                [global::System.Runtime.InteropServices.FieldOffsetAttribute(24)] public int MiddleC_field4;
                                                /// <inheritdoc cref="BaseA_A.BaseA_mf()" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseA_A">BaseA_A</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public int BaseA_mf() => MiddleA.BaseA_A.BaseA_mf();
                                                /// <inheritdoc cref="BaseB.BaseB_mf()" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseB">BaseB</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public int BaseB_mf() => BaseB.BaseB_mf();
                                                /// <inheritdoc cref="MiddleC.MiddleC_mf()" />
                                                /// <remarks>Method inherited from parent class <see cref="MiddleC">MiddleC</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public int MiddleC_mf() => MiddleC.MiddleC_mf();
                                                public unsafe partial struct ChildVirtualTable
                                                {
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <Child*, int*, void> BaseA_A_vf0;
                                                    [global::System.Runtime.InteropServices.FieldOffsetAttribute(32)] public delegate* unmanaged <Child*, int*, void> MiddleA_vf4;
                                                }
                                                public static partial class Delegates
                                                {
                                                    public delegate void BaseA_A_vf0(Child* thisPtr, int* arg);
                                                    public delegate void MiddleA_vf4(Child* thisPtr, int* arg);
                                                }
                                                /// <inheritdoc cref="BaseA_A.BaseA_A_vf0(int*)" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseA_A">BaseA_A</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void BaseA_A_vf0(int* arg) => VirtualTable->BaseA_A_vf0((Child*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                                /// <inheritdoc cref="BaseA_B.BaseA_B_vf0(global::InteropGenerator.Runtime.CStringPointer)" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseA_B">BaseA_B</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void BaseA_B_vf0(global::InteropGenerator.Runtime.CStringPointer arg) => MiddleA.BaseA_B.BaseA_B_vf0(arg);
                                                /// <inheritdoc cref="MiddleA.MiddleA_vf4(int*)" />
                                                /// <remarks>Method inherited from parent class <see cref="MiddleA">MiddleA</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void MiddleA_vf4(int* arg) => VirtualTable->MiddleA_vf4((Child*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this), arg);
                                                /// <inheritdoc cref="BaseC.BaseC_vf0(int*)" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseC">BaseC</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void BaseC_vf0(int* arg) => MiddleC.BaseC.BaseC_vf0(arg);
                                                /// <inheritdoc cref="BaseB.BaseB_method()" />
                                                /// <remarks>Method inherited from parent class <see cref="BaseB">BaseB</see>.</remarks>
                                                [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                                public void BaseB_method() => BaseB.BaseB_method();
                                                public void BaseA_B_vf0(string arg)
                                                {
                                                    int argUTF8StrLen = global::System.Text.Encoding.UTF8.GetByteCount(arg);
                                                    Span<byte> argBytes = argUTF8StrLen <= 511 ? stackalloc byte[512] : new byte[argUTF8StrLen + 1];
                                                    global::System.Text.Encoding.UTF8.GetBytes(arg, argBytes);
                                                    argBytes[argUTF8StrLen] = 0;
                                                    fixed (byte* argPtr = argBytes)
                                                    {
                                                        BaseA_B_vf0(argPtr);
                                                    }
                                                }
                                                public void BaseA_B_vf0(ReadOnlySpan<byte> arg)
                                                {
                                                    fixed (byte* argPtr = arg)
                                                    {
                                                        BaseA_B_vf0(argPtr);
                                                    }
                                                }
                                                /// <inheritdoc cref="BaseA_A.BaseA_A_field0" />
                                                /// <remarks>Field inherited from parent class <see cref="BaseA_A">BaseA_A</see>.</remarks>
                                                [global::System.Diagnostics.CodeAnalysis.UnscopedRefAttribute] public Span<byte> BaseA_A_field0 => MiddleA.BaseA_A._baseA_A_field0;
                                            }
                                            """;

        const string resolverCode = """
                                    // <auto-generated/>
                                    namespace InteropGeneratorTesting;
                                    public static class Addresses
                                    {
                                        public static void Register()
                                        {
                                            InteropGenerator.Runtime.Resolver.GetInstance.RegisterAddress(global::BaseA_A.Addresses.BaseA_mf);
                                            InteropGenerator.Runtime.Resolver.GetInstance.RegisterAddress(global::MiddleA.Addresses.StaticVirtualTable);
                                            InteropGenerator.Runtime.Resolver.GetInstance.RegisterAddress(global::BaseB.Addresses.BaseB_mf);
                                            InteropGenerator.Runtime.Resolver.GetInstance.RegisterAddress(global::BaseC.Addresses.BaseC_sa);
                                            InteropGenerator.Runtime.Resolver.GetInstance.RegisterAddress(global::MiddleC.Addresses.MiddleC_mf);
                                        }
                                        public static void Unregister()
                                        {
                                            InteropGenerator.Runtime.Resolver.GetInstance.UnregisterAddress(global::BaseA_A.Addresses.BaseA_mf);
                                            InteropGenerator.Runtime.Resolver.GetInstance.UnregisterAddress(global::MiddleA.Addresses.StaticVirtualTable);
                                            InteropGenerator.Runtime.Resolver.GetInstance.UnregisterAddress(global::BaseB.Addresses.BaseB_mf);
                                            InteropGenerator.Runtime.Resolver.GetInstance.UnregisterAddress(global::BaseC.Addresses.BaseC_sa);
                                            InteropGenerator.Runtime.Resolver.GetInstance.UnregisterAddress(global::MiddleC.Addresses.MiddleC_mf);
                                        }
                                    }
                                    """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("BaseA_A.InteropGenerator.g.cs", baseA_ACode),
            ("BaseA_B.InteropGenerator.g.cs", baseA_BCode),
            ("MiddleA.InteropGenerator.g.cs", middleACode),
            ("BaseB.InteropGenerator.g.cs", baseBCode),
            ("BaseC.InteropGenerator.g.cs", baseCCode),
            ("MiddleC.InteropGenerator.g.cs", middleCCode),
            ("Child.InteropGenerator.g.cs", childCode),
            ("MiddleA.Inheritance.InteropGenerator.g.cs", middleAInheritedCode),
            ("MiddleC.Inheritance.InteropGenerator.g.cs", middleCInheritedCode),
            ("Child.Inheritance.InteropGenerator.g.cs", childInheritedCode),
            ("InteropGeneratorTesting.Addresses.g.cs", resolverCode),
            SourceGeneration.GetFixedSizeArraySource([4]));
    }
}
