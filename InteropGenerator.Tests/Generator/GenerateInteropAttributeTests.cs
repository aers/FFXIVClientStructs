using Xunit;
using VerifyIG = InteropGenerator.Tests.Helpers.IncrementalGeneratorVerifier<InteropGenerator.Generator.InteropGenerator>;

namespace InteropGenerator.Tests.Generator;

public class GeneralInteropAttributeTests {
    [Fact]
    public async Task NoMarkerAttribute() {
        const string code = """
                            public partial struct TestStruct
                            {
                            }
                            """;

        await VerifyIG.VerifyGeneratorAsync(
            code);
    }

    [Fact]
    public async Task MarkerAttribute() {
        const string code = """
                            [GenerateInterop]
                            [global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            public partial struct TestStruct
                            {
                                [VirtualFunction(0)]
                                public partial void TestFunction();
                            }
                            """;

        const string result = """
                              // <auto-generated/>
                              unsafe partial struct TestStruct
                              {
                                  public const int StructSize = 4;
                                  [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                  public unsafe partial struct TestStructVirtualTable
                                  {
                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <TestStruct*, void> TestFunction;
                                  }
                                  [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public TestStructVirtualTable* VirtualTable;
                                  public static partial class Delegates
                                  {
                                      public delegate void TestFunction(TestStruct* thisPtr);
                                  }
                                  [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                  public partial void TestFunction() => VirtualTable->TestFunction((TestStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                              }
                              """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("TestStruct.InteropGenerator.g.cs", result));
    }

    [Fact]
    public async Task MarkerAttributeEmpty() {
        const string code = """
                            [GenerateInterop]
                            public partial struct TestStruct
                            {
                            }
                            """;

        await VerifyIG.VerifyGeneratorAsync(
            code);
    }

    [Fact]
    public async Task StructWithNamespace() {
        const string code = """
                            namespace TestNamespace.InnerNamespace;

                            [global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop]
                            public partial struct TestStruct
                            {
                                [VirtualFunction(0)]
                                public partial void TestFunction();
                            }
                            """;

        const string result = """
                              // <auto-generated/>
                              namespace TestNamespace.InnerNamespace;

                              unsafe partial struct TestStruct
                              {
                                  public const int StructSize = 4;
                                  [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                  public unsafe partial struct TestStructVirtualTable
                                  {
                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <TestStruct*, void> TestFunction;
                                  }
                                  [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public TestStructVirtualTable* VirtualTable;
                                  public static partial class Delegates
                                  {
                                      public delegate void TestFunction(TestStruct* thisPtr);
                                  }
                                  [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                  public partial void TestFunction() => VirtualTable->TestFunction((TestStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                              }
                              """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("TestNamespace.InnerNamespace.TestStruct.InteropGenerator.g.cs", result));
    }

    [Fact]
    public async Task NestedStruct() {
        const string code = """
                            public partial struct TestStruct
                            {
                                [global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                                [GenerateInterop]
                                public partial struct InnerStruct
                                {
                                    [VirtualFunction(0)]
                                    public partial void TestFunction();
                                }
                            }
                            """;

        const string result = """
                              // <auto-generated/>
                              unsafe partial struct TestStruct
                              {
                                  unsafe partial struct InnerStruct
                                  {
                                      public const int StructSize = 4;
                                      [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                      public unsafe partial struct InnerStructVirtualTable
                                      {
                                          [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <InnerStruct*, void> TestFunction;
                                      }
                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public InnerStructVirtualTable* VirtualTable;
                                      public static partial class Delegates
                                      {
                                          public delegate void TestFunction(InnerStruct* thisPtr);
                                      }
                                      [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                      public partial void TestFunction() => VirtualTable->TestFunction((InnerStruct*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                                  }
                              }
                              """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("TestStruct.InnerStruct.InteropGenerator.g.cs", result));
    }

    [Fact]
    public async Task StructWithGeneric() {
        const string code = """
                            [global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
                            [GenerateInterop]
                            public partial struct TestStruct<T> where T : unmanaged
                            {
                                [VirtualFunction(0)]
                                public partial void TestFunction();
                            }
                            """;

        const string result = """
                              // <auto-generated/>
                              unsafe partial struct TestStruct<T>
                              {
                                  public const int StructSize = 4;
                                  [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Explicit)]
                                  public unsafe partial struct TestStructVirtualTable
                                  {
                                      [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public delegate* unmanaged <TestStruct<T>*, void> TestFunction;
                                  }
                                  [global::System.Runtime.InteropServices.FieldOffsetAttribute(0)] public TestStructVirtualTable* VirtualTable;
                                  public static partial class Delegates
                                  {
                                      public delegate void TestFunction(TestStruct<T>* thisPtr);
                                  }
                                  [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                                  public partial void TestFunction() => VirtualTable->TestFunction((TestStruct<T>*)global::System.Runtime.CompilerServices.Unsafe.AsPointer(ref this));
                              }
                              """;

        await VerifyIG.VerifyGeneratorAsync(
            code,
            ("TestStruct.InteropGenerator.g.cs", result));
    }
}
